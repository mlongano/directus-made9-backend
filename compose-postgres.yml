services:
  directus:
    build:
      context: .
      dockerfile: Dockerfile.directus
    ports:
      - "8055:8055"
    environment:

      PUBLIC_URL: '${PUBLIC_URL}'
      KEY: '${KEY}'
      SECRET: '${SECRET}'
      DB_CLIENT: 'pg'
      DB_HOST: 'postgres'
      DB_PORT: '5432'
      DB_DATABASE: '${POSTGRES_DB}'
      DB_USER: '${POSTGRES_USER}'
      DB_PASSWORD: '${POSTGRES_PASSWORD}'
      ADMIN_EMAIL: '${ADMIN_EMAIL}'
      ADMIN_PASSWORD: '${ADMIN_PASSWORD}'
      WEBSOCKETS_ENABLED: "true"
      # Migration settings
      MIGRATIONS_DIRECTORY: '/directus/migrations'
      MIGRATIONS_AUTO_RUN: 'true'
      # Specify that we're using ES modules
      MIGRATIONS_MODULE_FORMAT: 'esm'  # This is the key part for ES modules
      NODE_OPTIONS: '--experimental-specifier-resolution=node'

    volumes:
      - ./database:/directus/database
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
      - ./migrations:/directus/migrations
      - ./seeds:/directus/seeds  # Optional: only if using separate seeds
      - ./knexfile.js:/directus/knexfile.js
      - ./knexfile-sqlite.js:/directus/knexfile-sqlite.js
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgis/postgis:15-3.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  postgres_data:
